{"version":3,"file":"static/webpack/static/development/pages/speakers.js.f88ea98b9d89ae33002f.hot-update.js","sources":["webpack:///./pages/speakers.js"],"sourcesContent":["// This is the Link API\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport speakerReducer from '../src/reducers/speakerReducer';\nimport Table from '../src/components/Table/Table';\nimport { useState, useEffect, useReducer } from 'react';\nimport AuthHelperMethods from '../utils/AuthHelperMethods';\nimport Router from 'next/router';\nfunction Speakers({ speaker }) {\n  const Auth = new AuthHelperMethods();\n  const [speakersData, dispatch] = useReducer(speakerReducer, {\n    speaker,\n  });\n  useEffect(() => {\n    if (!Auth.loggedIn()) {\n      Router.push('/login')\n    }\n  }, []);\n\n  return (\n    <>\n      {console.log(speakersData.speaker.speakers)}\n      <hr />\n      <ul>\n        {speakersData.speaker.speakers.map((speaker, index) => {\n          return <li key={speaker.id}>{speaker.firstName}</li>;\n        })}\n      </ul>\n    </>\n  );\n}\n\nSpeakers.getInitialProps = async () => {\n  const respon = await fetch('http://localhost:8000/speakers');\n  const data = await respon.json();\n  const error = 'Module Not Found';\n  if (data) {\n    return { speaker: data };\n  } else {\n    return { speaker: error };\n  }\n};\n\nexport default Speakers;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AADA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AANA;AAAA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}