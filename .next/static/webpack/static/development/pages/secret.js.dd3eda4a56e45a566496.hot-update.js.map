{"version":3,"file":"static/webpack/static/development/pages/secret.js.dd3eda4a56e45a566496.hot-update.js","sources":["webpack:///./pages/secret.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport { handleAuthSSR } from '../utils/auth';\n\nconst serverUrl = 'http://localhost:8080';\n\n// set up cookies\nconst cookies = new Cookies();\n\nclass Secret extends React.Component {\n  onPingCall = async (e) => {\n    const token = cookies.get('token');\nconsole.log(token);\n    try {\n      const res = await axios.post(serverUrl + '/logout', {\n        headers: { Authorization: token },\n      });\n      console.log(\"this is it................\" + res.data.msg);\n    } catch (err) {\n      console.log(err.res.data.msg);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Secret page</h2>\n        <p>Only accessible via a valid JWT</p>\n        <br />\n        <button onClick={(e) => this.onPingCall(e)}>Logout</button>\n        <p>Check console for response</p>\n      </div>\n    );\n  }\n}\n\n// Server-Side Rendering\nSecret.getInitialProps = async (ctx) => {\n  // Must validate JWT\n  // If the JWT is invalid it must redirect\n  // back to the main page. You can do that\n  // with Router from 'next/router\n  await handleAuthSSR(ctx);\n\n  // Must return an object\n  return {};\n};\n\nexport default Secret;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AAAA;AAAA;AADA;AACA;AALA;AAIA;AAGA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxBA;AACA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}