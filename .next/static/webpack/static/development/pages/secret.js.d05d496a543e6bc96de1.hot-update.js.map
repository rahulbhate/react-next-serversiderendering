{"version":3,"file":"static/webpack/static\\development\\pages\\secret.js.d05d496a543e6bc96de1.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./pages/secret.js","webpack:///./utils/AuthHelperMethods.js","webpack:///./utils/withAuth.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport withAuth from '../utils/withAuth';\r\nimport { Router } from 'next/router';\r\nimport decode from 'jwt-decode';\r\nconst serverUrl = 'http://localhost:8080';\r\n\r\nfunction Secret() {\r\n  const [isAuthenticated, setAuthenticated] = useState();\r\n  const [clientToken, setToken] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('rememberMe');\r\n    console.log(token);\r\n\r\n    if (token) {\r\n      const decoded = decode(token);\r\n      setAuthenticated(true);\r\n      setToken(token);\r\n      console.log(clientToken);\r\n      console.log(decoded);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        setAuthenticated(false);\r\n        localStorage.removeItem('rememberMe');\r\n      }\r\n    } else {\r\n      setAuthenticated(false);\r\n      //Router.push('/login');\r\n    }\r\n    console.log('useEffect hook called');\r\n  });\r\n  const logout = async () => {\r\n    await axios\r\n      .post(serverUrl + '/logout', {})\r\n      .then((res) => {\r\n        console.log(res);\r\n        setToken('');\r\n        localStorage.removeItem('rememberMe');\r\n        console.log('token has been removed');\r\n      })\r\n      .then((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return isAuthenticated ? (\r\n    <div>\r\n      {' '}\r\n      <h3>This is secret page</h3>\r\n      <button onClick={logout}>Logout</button>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h3>You are not authorized user</h3>\r\n    </div>\r\n  );\r\n}\r\nexport default Auth(Secret);\r\n","import decode from 'jwt-decode';\r\n\r\nexport default class AuthHelperMethods {\r\n  // Initializing important variables\r\n  constructor(domain) {\r\n    //THIS LINE IS ONLY USED WHEN YOU'RE IN PRODUCTION MODE!\r\n    this.domain = domain || 'http://localhost:3000'; // API server domain\r\n  }\r\n  login = (username, password) => {\r\n    // Get a token from api server using the fetch api\r\n    return this.fetch(`/log-in`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    }).then((res) => {\r\n      this.setToken(res.token); // Setting the token in localStorage\r\n      return Promise.resolve(res);\r\n    });\r\n  };\r\n\r\n  loggedIn = () => {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken(); // Getting token from localstorage\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  };\r\n\r\n  isTokenExpired = (token) => {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        // Checking if token is expired.\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      console.log('expired check failed! Line 42: AuthService.js');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  setToken = (idToken) => {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n  };\r\n\r\n  getToken = () => {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  };\r\n\r\n  logout = () => {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n  };\r\n\r\n  getConfirm = () => {\r\n    // Using jwt-decode npm package to decode the token\r\n    let answer = decode(this.getToken());\r\n    console.log('Recieved answer!');\r\n    return answer;\r\n  };\r\n\r\n  fetch = (url, options) => {\r\n    // performs api calls sending the required authentication headers\r\n    const headers = {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    };\r\n    // Setting Authorization header\r\n    // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n    if (this.loggedIn()) {\r\n      headers['Authorization'] = 'Bearer ' + this.getToken();\r\n    }\r\n\r\n    return fetch(url, {\r\n      headers,\r\n      ...options,\r\n    })\r\n      .then(this._checkStatus)\r\n      .then((response) => response.json());\r\n  };\r\n\r\n  _checkStatus = (response) => {\r\n    // raises an error in case response status is not a success\r\n    if (response.status >= 200 && response.status < 300) {\r\n      // Success status lies between 200 to 300\r\n      return response;\r\n    } else {\r\n      var error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport AuthHelperMethods from './AuthHelperMethods';\r\n\r\n/* A higher order component is frequently written as a function that returns a class. */\r\nexport default function withAuth(AuthComponent) {\r\n  const Auth = new AuthHelperMethods();\r\n\r\n  return class AuthWrapped extends Component {\r\n    state = {\r\n      confirm: null,\r\n      loaded: false,\r\n    };\r\n\r\n    /* In the componentDid<ount, we would want to do a couple of important tasks in order to verify the current users authentication status\r\n    prior to granting them enterance into the app. */\r\n    componentDidMount() {\r\n      if (!Auth.loggedIn()) {\r\n        this.props.history.replace('/login');\r\n      } else {\r\n        /* Try to get confirmation message from the Auth helper. */\r\n        try {\r\n          const confirm = Auth.getConfirm();\r\n          console.log('confirmation is:', confirm);\r\n          this.setState({\r\n            confirm: confirm,\r\n            loaded: true,\r\n          });\r\n        } catch (err) {\r\n          /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\r\n          console.log(err);\r\n          Auth.logout();\r\n          this.props.history.replace('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.loaded == true) {\r\n        if (this.state.confirm) {\r\n          console.log('confirmed!');\r\n          return (\r\n            /* component that is currently being wrapper(App.js) */\r\n            <AuthComponent\r\n              history={this.props.history}\r\n              confirm={this.state.confirm}\r\n            />\r\n          );\r\n        } else {\r\n          console.log('not confirmed!');\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AADA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AADA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AACA;AACA;AACA;AACA;AA1DA;AA4DA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAKA;AAAA;AACA;AACA;AA9EA;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzFA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AACA;AAKA;;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AACA;AADA;AAAA;AAiDA;;;;A","sourceRoot":""}