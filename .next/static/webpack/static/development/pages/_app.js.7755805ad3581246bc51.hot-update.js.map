{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.7755805ad3581246bc51.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\r\nimport App, { Container } from 'next/app';\r\nimport Layout from '../src/Layout';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nconst reducer = (state = { foo: '' }, action) => {\r\n  switch (action.type) {\r\n    case 'FOO':\r\n      return { ...state, foo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst makeStore = (initialState, options) => {\r\n  return createStore(reducer, initialState);\r\n};\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    // we can dispatch from here too\r\n    ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\r\n    const pageProps = Component.getInitialProps\r\n      ? await Component.getInitialProps(ctx)\r\n      : {};\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Provider store={store}>\r\n          <Layout>\r\n            <Component {...pageProps} />\r\n          </Layout>\r\n        </Provider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AApBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AAAA;AACA;;AAHA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AARA;AACA;AAuBA;;;;A","sourceRoot":""}