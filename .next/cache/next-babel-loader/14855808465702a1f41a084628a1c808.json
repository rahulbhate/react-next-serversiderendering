{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nvar useInfiniteScroll = function useInfiniteScroll(callback) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFetching = _useState2[0],\n      setIsFetching = _useState2[1];\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(function () {\n    if (!isFetching) return;\n    callback(function () {\n      console.log('called back');\n    });\n  }, [isFetching]);\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) return;\n    setIsFetching(true);\n  }\n\n  return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-next-serversiderendering/src/components/List/useInfiniteScroll.js"],"names":["useState","useEffect","useInfiniteScroll","callback","isFetching","setIsFetching","window","addEventListener","handleScroll","removeEventListener","console","log","innerHeight","document","documentElement","scrollTop","offsetHeight"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;AAAA,kBACFH,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,MAC/BI,UAD+B;AAAA,MACnBC,aADmB;;AAGtCJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,WAAO;AAAA,aAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC,CAAN;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACG,UAAL,EAAiB;AACjBD,IAAAA,QAAQ,CAAC,YAAM;AACbO,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAFO,CAAR;AAGD,GALQ,EAKN,CAACP,UAAD,CALM,CAAT;;AAOA,WAASI,YAAT,GAAwB;AACtB,QACEF,MAAM,CAACM,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KACEF,QAAQ,CAACC,eAAT,CAAyBE,YAD3B,IAEAZ,UAHF,EAKE;AACFC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,SAAO,CAACD,UAAD,EAAaC,aAAb,CAAP;AACD,CA1BD;;AA4BA,eAAeH,iBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = (callback) => {\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    callback(() => {\n      console.log('called back');\n    });\n  }, [isFetching]);\n\n  function handleScroll() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      return;\n    setIsFetching(true);\n  }\n\n  return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;\n"]},"metadata":{},"sourceType":"module"}