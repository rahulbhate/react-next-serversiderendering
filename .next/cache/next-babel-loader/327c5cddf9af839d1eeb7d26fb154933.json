{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useReducer, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AuthHelperMethods from '../../../utils/AuthHelperMethods';\n\nvar useForm = function useForm(callback) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var Auth = new AuthHelperMethods();\n\n  var _useReducer = useReducer(function (state, newState) {\n    return _objectSpread({}, state, newState);\n  }, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputValues = _useReducer2[0],\n      setInputValues = _useReducer2[1];\n\n  useEffect(function () {\n    console.log('useEffect hook called');\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    console.log('Handle Submit Called'); // Call SERVER USING FETCH METHOD and PASS STATE VALUES TO BACK END WITH POST METHOD..\n\n    if (event) event.preventDefault();\n    console.log(inputValues);\n    Auth.login(inputValues);\n    /*axios.post(`http://localhost:8080/login`, inputValues).then((res) => {\n      console.log(res.data.token);\n      const token = res.data.token;\n      localStorage.setItem('rememberMe', token);\n      setToken(token);\n      console.log(token);\n      Router.push('/secret');\n    });*/\n\n    callback();\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setInputValues(_defineProperty({}, name, value));\n  };\n\n  return {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    inputValues: inputValues\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-next-serversiderendering/src/components/LoginForm/useForm.js"],"names":["useReducer","useState","useEffect","axios","Router","AuthHelperMethods","useForm","callback","token","setToken","Auth","state","newState","inputValues","setInputValues","console","log","handleSubmit","event","preventDefault","login","handleChange","persist","target","name","value"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAAA,kBACFN,QAAQ,EADN;AAAA;AAAA,MACrBO,KADqB;AAAA,MACdC,QADc;;AAE5B,MAAMC,IAAI,GAAG,IAAIL,iBAAJ,EAAb;;AAF4B,oBAGUL,UAAU,CAC9C,UAACW,KAAD,EAAQC,QAAR;AAAA,6BAA2BD,KAA3B,EAAqCC,QAArC;AAAA,GAD8C,EAE9C,EAF8C,CAHpB;AAAA;AAAA,MAGrBC,WAHqB;AAAA,MAGRC,cAHQ;;AAO5BZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAFQ,CAAT;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAD8B,CAE9B;;AACA,QAAIE,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAH,IAAAA,IAAI,CAACU,KAAL,CAAWP,WAAX;AACA;;;;;;;;;AASAN,IAAAA,QAAQ;AACT,GAhBD;;AAkBA,MAAMc,YAAY,GAAG,SAAfA,YAAe,CAACH,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACI,OAAN;AAD8B,wBAENJ,KAAK,CAACK,MAFA;AAAA,QAEtBC,IAFsB,iBAEtBA,IAFsB;AAAA,QAEhBC,KAFgB,iBAEhBA,KAFgB;AAG9BX,IAAAA,cAAc,qBAAIU,IAAJ,EAAWC,KAAX,EAAd;AACD,GAJD;;AAMA,SAAO;AACLJ,IAAAA,YAAY,EAAZA,YADK;AAELJ,IAAAA,YAAY,EAAZA,YAFK;AAGLJ,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD,CAxCD;;AA0CA,eAAeP,OAAf","sourcesContent":["import { useReducer, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport AuthHelperMethods from '../../../utils/AuthHelperMethods';\nconst useForm = (callback) => {\n  const [token, setToken] = useState();\n  const Auth = new AuthHelperMethods();\n  const [inputValues, setInputValues] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {},\n  );\n  useEffect(() => {\n    console.log('useEffect hook called');\n  });\n\n  const handleSubmit = (event) => {\n    console.log('Handle Submit Called');\n    // Call SERVER USING FETCH METHOD and PASS STATE VALUES TO BACK END WITH POST METHOD..\n    if (event) event.preventDefault();\n    console.log(inputValues);\n    Auth.login(inputValues);\n    /*axios.post(`http://localhost:8080/login`, inputValues).then((res) => {\n      console.log(res.data.token);\n      const token = res.data.token;\n      localStorage.setItem('rememberMe', token);\n      setToken(token);\n      console.log(token);\n      Router.push('/secret');\n    });*/\n\n    callback();\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    const { name, value } = event.target;\n    setInputValues({ [name]: value });\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    inputValues,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}