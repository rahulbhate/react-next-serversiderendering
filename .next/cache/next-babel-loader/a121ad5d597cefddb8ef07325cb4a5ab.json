{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar useTable = function useTable(callback) {\n  var _useState = useState([{}]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(10),\n      _useState8 = _slicedToArray(_useState7, 2),\n      postsPerPage = _useState8[0],\n      setPostsPerPage = _useState8[1]; //Get current posts...\n\n\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPosts);\n  useEffect(function () {\n    var fetchPosts =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get('https://jsonplaceholder.typicode.com/posts');\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []);\n\n  var paginatePosts = function paginatePosts(pageNumber) {\n    setCurrentPage(pageNumber);\n  };\n\n  return {\n    posts: posts,\n    currentPage: currentPage,\n    postsPerPage: postsPerPage,\n    currentPosts: currentPosts,\n    paginatePosts: paginatePosts\n  };\n};\n\nexport default useTable;","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-next-serversiderendering/src/components/Table/useTable.js"],"names":["useState","useEffect","axios","useTable","callback","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","console","log","fetchPosts","get","res","data","paginatePosts","pageNumber"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAAA,kBACHJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CADL;AAAA;AAAA,MACtBK,KADsB;AAAA,MACfC,QADe;;AAAA,mBAECN,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,MAEtBO,OAFsB;AAAA,MAEbC,UAFa;;AAAA,mBAGSR,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,MAGtBS,WAHsB;AAAA,MAGTC,cAHS;;AAAA,mBAIWV,QAAQ,CAAC,EAAD,CAJnB;AAAA;AAAA,MAItBW,YAJsB;AAAA,MAIRC,eAJQ,kBAM7B;;;AACA,MAAMC,eAAe,GAAGJ,WAAW,GAAGE,YAAtC;AACA,MAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACA,MAAMI,YAAY,GAAGV,KAAK,CAACW,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBX,gBAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;AAAA,uBAECN,KAAK,CAACkB,GAAN,CAAU,4CAAV,CAFD;;AAAA;AAEXC,gBAAAA,GAFW;AAGjBf,gBAAAA,QAAQ,CAACe,GAAG,CAACC,IAAL,CAAR;AACAd,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVW,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAMAA,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;;AASA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AACpCd,IAAAA,cAAc,CAACc,UAAD,CAAd;AACD,GAFD;;AAGA,SAAO;AACLnB,IAAAA,KAAK,EAALA,KADK;AAELI,IAAAA,WAAW,EAAXA,WAFK;AAGLE,IAAAA,YAAY,EAAZA,YAHK;AAILI,IAAAA,YAAY,EAAZA,YAJK;AAKLQ,IAAAA,aAAa,EAAbA;AALK,GAAP;AAOD,CA9BD;;AA+BA,eAAepB,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nconst useTable = (callback) => {\n  const [posts, setPosts] = useState([{}]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  //Get current posts...\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPosts);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPosts(res.data);\n      setLoading(false);\n    };\n    fetchPosts();\n  }, []);\n  const paginatePosts = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  return {\n    posts,\n    currentPage,\n    postsPerPage,\n    currentPosts,\n    paginatePosts,\n  };\n};\nexport default useTable;\n"]},"metadata":{},"sourceType":"module"}