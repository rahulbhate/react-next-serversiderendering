{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rbhate\\\\projects\\\\react-next-serversiderendering\\\\pages\\\\secret.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport withAuth from '../utils/withAuth';\nimport { Router } from 'next/router';\nimport decode from 'jwt-decode';\nvar serverUrl = 'http://localhost:8080';\n\nfunction Secret() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clientToken = _useState4[0],\n      setToken = _useState4[1];\n\n  useEffect(function () {\n    var token = localStorage.getItem('rememberMe');\n    console.log(token);\n\n    if (token) {\n      var decoded = decode(token);\n      setAuthenticated(true);\n      setToken(token);\n      console.log(clientToken);\n      console.log(decoded);\n\n      if (decoded.exp < _Date$now() / 1000) {\n        setAuthenticated(false);\n        localStorage.removeItem('rememberMe');\n      }\n    } else {\n      setAuthenticated(false); //Router.push('/login');\n    }\n\n    console.log('useEffect hook called');\n  });\n\n  var logout =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(serverUrl + '/logout', {}).then(function (res) {\n                console.log(res);\n                setToken('');\n                localStorage.removeItem('rememberMe');\n                console.log('token has been removed');\n              }).then(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function logout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return isAuthenticated ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, ' ', React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"This is secret page\"), React.createElement(\"button\", {\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Logout\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"You are not authorized user\"));\n}\n\nexport default withAuth(Secret);","map":{"version":3,"sources":["C:\\Users\\rbhate\\projects\\react-next-serversiderendering\\pages\\secret.js"],"names":["React","useState","useEffect","axios","withAuth","Router","decode","serverUrl","Secret","isAuthenticated","setAuthenticated","clientToken","setToken","token","localStorage","getItem","console","log","decoded","exp","removeItem","logout","post","then","res","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,IAAMC,SAAS,GAAG,uBAAlB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBAC4BP,QAAQ,EADpC;AAAA;AAAA,MACTQ,eADS;AAAA,MACQC,gBADR;;AAAA,mBAEgBT,QAAQ,EAFxB;AAAA;AAAA,MAETU,WAFS;AAAA,MAEIC,QAFJ;;AAGhBV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACT,UAAMK,OAAO,GAAGZ,MAAM,CAACO,KAAD,CAAtB;AACAH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,UAAIA,OAAO,CAACC,GAAR,GAAc,cAAa,IAA/B,EAAqC;AACnCT,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,QAAAA,YAAY,CAACM,UAAb,CAAwB,YAAxB;AACD;AACF,KAVD,MAUO;AACLV,MAAAA,gBAAgB,CAAC,KAAD,CAAhB,CADK,CAEL;AACD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAnBQ,CAAT;;AAoBA,MAAMI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPlB,KAAK,CACRmB,IADG,CACEf,SAAS,GAAG,SADd,EACyB,EADzB,EAEHgB,IAFG,CAEE,UAACC,GAAD,EAAS;AACbR,gBAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAZ,gBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,gBAAAA,YAAY,CAACM,UAAb,CAAwB,YAAxB;AACAJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,eAPG,EAQHM,IARG,CAQE,UAACE,KAAD,EAAW;AACfT,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,eAVG,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANJ,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAaA,SAAOZ,eAAe,GACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAQ,IAAA,OAAO,EAAEY,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADoB,GAOpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CAPF;AAWD;;AACD,eAAejB,QAAQ,CAACI,MAAD,CAAvB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport withAuth from '../utils/withAuth';\r\nimport { Router } from 'next/router';\r\nimport decode from 'jwt-decode';\r\nconst serverUrl = 'http://localhost:8080';\r\n\r\nfunction Secret() {\r\n  const [isAuthenticated, setAuthenticated] = useState();\r\n  const [clientToken, setToken] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('rememberMe');\r\n    console.log(token);\r\n\r\n    if (token) {\r\n      const decoded = decode(token);\r\n      setAuthenticated(true);\r\n      setToken(token);\r\n      console.log(clientToken);\r\n      console.log(decoded);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        setAuthenticated(false);\r\n        localStorage.removeItem('rememberMe');\r\n      }\r\n    } else {\r\n      setAuthenticated(false);\r\n      //Router.push('/login');\r\n    }\r\n    console.log('useEffect hook called');\r\n  });\r\n  const logout = async () => {\r\n    await axios\r\n      .post(serverUrl + '/logout', {})\r\n      .then((res) => {\r\n        console.log(res);\r\n        setToken('');\r\n        localStorage.removeItem('rememberMe');\r\n        console.log('token has been removed');\r\n      })\r\n      .then((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return isAuthenticated ? (\r\n    <div>\r\n      {' '}\r\n      <h3>This is secret page</h3>\r\n      <button onClick={logout}>Logout</button>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h3>You are not authorized user</h3>\r\n    </div>\r\n  );\r\n}\r\nexport default withAuth(Secret);\r\n"]},"metadata":{},"sourceType":"module"}