{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useReducer, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nvar cookies = new Cookies();\n\nvar useForm = function useForm(callback) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useReducer = useReducer(function (state, newState) {\n    return _objectSpread({}, state, newState);\n  }, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputValues = _useReducer2[0],\n      setInputValues = _useReducer2[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    // Call SERVER USING FETCH METHOD and PASS STATE VALUES TO BACK END WITH POST METHOD..\n    if (event) event.preventDefault();\n    console.log(inputValues);\n    axios.post(\"http://localhost:8080/login\", inputValues).then(function (res) {\n      console.log(res.data.token);\n      var token = res.data.token;\n      cookies.set('token', token);\n      setToken(token);\n      console.log(token);\n      Router.push('/secret');\n    });\n    callback();\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setInputValues(_defineProperty({}, name, value));\n  };\n\n  return {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    inputValues: inputValues\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-next-serversiderendering/src/components/LoginForm/useForm.js"],"names":["useReducer","useState","useEffect","axios","Router","Cookies","cookies","useForm","callback","token","setToken","state","newState","inputValues","setInputValues","handleSubmit","event","preventDefault","console","log","post","then","res","data","set","push","handleChange","persist","target","name","value"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AACA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAAA,kBACHP,QAAQ,EADL;AAAA;AAAA,MACrBQ,KADqB;AAAA,MACfC,QADe;;AAAA,oBAEUV,UAAU,CAC9C,UAACW,KAAD,EAAQC,QAAR;AAAA,6BAA2BD,KAA3B,EAAqCC,QAArC;AAAA,GAD8C,EAE9C,EAF8C,CAFpB;AAAA;AAAA,MAErBC,WAFqB;AAAA,MAERC,cAFQ;;AAQ5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACA,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAV,IAAAA,KAAK,CAACiB,IAAN,gCAA0CP,WAA1C,EAAuDQ,IAAvD,CAA4D,UAACC,GAAD,EAAS;AACnEJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAJ,CAASd,KAArB;AACA,UAAMA,KAAK,GAAGa,GAAG,CAACC,IAAJ,CAASd,KAAvB;AACFH,MAAAA,OAAO,CAACkB,GAAR,CAAY,OAAZ,EAAqBf,KAArB;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAGEL,MAAAA,MAAM,CAACqB,IAAP,CAAY,SAAZ;AACD,KATD;AAWAjB,IAAAA,QAAQ;AACT,GAhBD;;AAkBA,MAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACV,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACW,OAAN;AAD8B,wBAENX,KAAK,CAACY,MAFA;AAAA,QAEtBC,IAFsB,iBAEtBA,IAFsB;AAAA,QAEhBC,KAFgB,iBAEhBA,KAFgB;AAG9BhB,IAAAA,cAAc,qBAAIe,IAAJ,EAAWC,KAAX,EAAd;AAED,GALD;;AAOA,SAAO;AACLJ,IAAAA,YAAY,EAAZA,YADK;AAELX,IAAAA,YAAY,EAAZA,YAFK;AAGLF,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD,CAtCD;;AAwCA,eAAeN,OAAf","sourcesContent":["import { useReducer, useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\n\nconst cookies = new Cookies();\nconst useForm = (callback) => {\n  const [token,setToken] = useState();\n  const [inputValues, setInputValues] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  );\n  \n\n  const handleSubmit = (event) => {\n    // Call SERVER USING FETCH METHOD and PASS STATE VALUES TO BACK END WITH POST METHOD..\n    if (event) event.preventDefault();\n    console.log(inputValues);\n    axios.post(`http://localhost:8080/login`, inputValues).then((res) => {\n      console.log(res.data.token);\n      const token = res.data.token;\n    cookies.set('token', token);\n    setToken(token);\n    console.log(token);\n    \n    \n      Router.push('/secret');\n    })\n\n    callback();\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    const { name, value } = event.target;\n    setInputValues({ [name]: value });\n  \n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    inputValues,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}