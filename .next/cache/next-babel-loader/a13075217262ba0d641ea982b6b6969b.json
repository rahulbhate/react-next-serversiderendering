{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rbhate\\\\projects\\\\react-next-serversiderendering\\\\pages\\\\speakers.js\";\n// This is the Link API\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nfunction Speakers(_ref) {\n  var speaker = _ref.speaker;\n\n  var _useState = useState({\n    speaker: speaker\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      speakersData = _useState2[0],\n      setSpeakersData = _useState2[1];\n\n  useEffect(function () {\n    console.log('UseEffect LifeCycle Method on Client Side get Called once Server Side Rendering Done');\n  }, []);\n  return React.createElement(React.Fragment, null, console.log(speakersData.speaker.speakers), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, speakersData.speaker.speakers.map(function (speaker, index) {\n    return React.createElement(\"li\", {\n      key: speaker.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, speaker.firstName);\n  })));\n}\n\nSpeakers.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axios.post(\"http://localhost:8080/speakers\", values).then(function (res) {\n            console.log(res);\n            var data = respon.json();\n            return {\n              speaker: data\n            };\n          }); //const respon = await fetch('http://localhost:8080/speakers');\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Speakers;","map":{"version":3,"sources":["C:\\Users\\rbhate\\projects\\react-next-serversiderendering\\pages\\speakers.js"],"names":["React","axios","useState","useEffect","Speakers","speaker","speakersData","setSpeakersData","console","log","speakers","map","index","id","firstName","getInitialProps","post","values","then","res","data","respon","json"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,kBACWH,QAAQ,CAAC;AAAEG,IAAAA,OAAO,EAAPA;AAAF,GAAD,CADnB;AAAA;AAAA,MACtBC,YADsB;AAAA,MACRC,eADQ;;AAG7BJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CACE,sFADF;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,0CACGD,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACD,OAAb,CAAqBK,QAAjC,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,CAACD,OAAb,CAAqBK,QAArB,CAA8BC,GAA9B,CAAkC,UAACN,OAAD,EAAUO,KAAV,EAAoB;AACrD,WAAO;AAAI,MAAA,GAAG,EAAEP,OAAO,CAACQ,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBR,OAAO,CAACS,SAA9B,CAAP;AACD,GAFA,CADH,CAHF,CADF;AAWD;;AAEDV,QAAQ,CAACW,eAAT;AAAA;AAAA;AAAA;AAAA,yBAA2B;AAAA;AAAA;AAAA;AAAA;AACzBd,UAAAA,KAAK,CAACe,IAAN,mCAA6CC,MAA7C,EAAqDC,IAArD,CAA0D,UAACC,GAAD,EAAS;AACjEX,YAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,gBAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,EAAb;AACA,mBAAO;AAAEjB,cAAAA,OAAO,EAAEe;AAAX,aAAP;AACD,WAJD,EADyB,CAMzB;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AASA,eAAehB,QAAf","sourcesContent":["// This is the Link API\r\nimport React from 'react';\r\n\r\nimport 'isomorphic-unfetch';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Speakers({ speaker }) {\r\n  const [speakersData, setSpeakersData] = useState({ speaker });\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      'UseEffect LifeCycle Method on Client Side get Called once Server Side Rendering Done',\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {console.log(speakersData.speaker.speakers)}\r\n      <hr />\r\n      <ul>\r\n        {speakersData.speaker.speakers.map((speaker, index) => {\r\n          return <li key={speaker.id}>{speaker.firstName}</li>;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nSpeakers.getInitialProps = async () => {\r\n  axios.post(`http://localhost:8080/speakers`, values).then((res) => {\r\n    console.log(res);\r\n    const data = respon.json();\r\n    return { speaker: data };\r\n  });\r\n  //const respon = await fetch('http://localhost:8080/speakers');\r\n};\r\n\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}