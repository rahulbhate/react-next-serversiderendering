{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rbhate\\\\projects\\\\react-next-serversiderendering\\\\utils\\\\withAuthInitial.js\";\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport AuthHelperMethods from './AuthHelperMethods';\nexport default function withAuthInitial(AuthComponent) {\n  var Auth = new AuthHelperMethods();\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(Authenticated, _Component);\n\n      _createClass(Authenticated, null, [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(ctx) {\n            var pageProps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.t0 = AuthComponent.getInitialProps;\n\n                    if (!_context.t0) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 4;\n                    return AuthComponent.getInitialProps(ctx);\n\n                  case 4:\n                    _context.t0 = _context.sent;\n\n                  case 5:\n                    pageProps = _context.t0;\n                    return _context.abrupt(\"return\", _objectSpread({}, pageProps));\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      function Authenticated(props) {\n        var _this;\n\n        _classCallCheck(this, Authenticated);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Authenticated).call(this, props));\n        _this.state = {\n          isLoading: true\n        };\n        return _this;\n      }\n\n      _createClass(Authenticated, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (!Auth.loggedIn()) {\n            Router.push('/login');\n          }\n\n          this.setState({\n            isLoading: false\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, this.state.isLoading ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"LOADING....\") : React.createElement(AuthComponent, _extends({}, this.props, {\n            auth: Auth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          })));\n        }\n      }]);\n\n      return Authenticated;\n    }(Component)\n  );\n}","map":{"version":3,"sources":["C:\\Users\\rbhate\\projects\\react-next-serversiderendering\\utils\\withAuthInitial.js"],"names":["React","Component","Router","AuthHelperMethods","withAuthInitial","AuthComponent","Auth","ctx","getInitialProps","pageProps","props","state","isLoading","loggedIn","push","setState"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,SAASC,eAAT,CAAyBC,aAAzB,EAAwC;AACrD,MAAMC,IAAI,GAAG,IAAIH,iBAAJ,EAAb;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAC+BI,GAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAIMF,aAAa,CAACG,eAJpB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAKaH,aAAa,CAACG,eAAd,CAA8BD,GAA9B,CALb;;AAAA;AAAA;;AAAA;AAGUE,oBAAAA,SAHV;AAAA,uEAOgBA,SAPhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAUE,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,cAAKC,KAAL,GAAa;AACXC,UAAAA,SAAS,EAAE;AADA,SAAb;AAFiB;AAKlB;;AAfH;AAAA;AAAA,4CAiBsB;AAClB,cAAI,CAACN,IAAI,CAACO,QAAL,EAAL,EAAsB;AACpBX,YAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACD;;AACD,eAAKC,QAAL,CAAc;AAAEH,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AAtBH;AAAA;AAAA,iCAwBW;AACP,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAKD,KAAL,CAAWC,SAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,GAGC,oBAAC,aAAD,eAAmB,KAAKF,KAAxB;AAA+B,YAAA,IAAI,EAAEJ,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADF;AASD;AAlCH;;AAAA;AAAA,MAAmCL,SAAnC;AAAA;AAoCD","sourcesContent":["import React, { Component } from 'react';\r\nimport Router from 'next/router';\r\nimport AuthHelperMethods from './AuthHelperMethods';\r\n\r\nexport default function withAuthInitial(AuthComponent) {\r\n  const Auth = new AuthHelperMethods();\r\n  return class Authenticated extends Component {\r\n    static async getInitialProps(ctx) {\r\n      // Check if Page has a `getInitialProps`; if so, call it.\r\n      const pageProps =\r\n        AuthComponent.getInitialProps &&\r\n        (await AuthComponent.getInitialProps(ctx));\r\n      // Return props.\r\n      return { ...pageProps };\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isLoading: true,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (!Auth.loggedIn()) {\r\n        Router.push('/login');\r\n      }\r\n      this.setState({ isLoading: false });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          {this.state.isLoading ? (\r\n            <div>LOADING....</div>\r\n          ) : (\r\n            <AuthComponent {...this.props} auth={Auth} />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}