{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rbhate\\\\projects\\\\react-next-serversiderendering\\\\pages\\\\index.js\";\n// This is the Link API\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux'; //import Button from 'react-reusable-components/src/components/Button/Button';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Prop from Redux \", _JSON$stringify(this.props.foo)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Prop from getInitialProps \", this.props.custom));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store,\n          isServer = _ref.isServer,\n          pathname = _ref.pathname,\n          query = _ref.query;\n      // component will be able to read from store's state when rendered\n      store.dispatch({\n        type: 'FOO',\n        payload: 'foo'\n      }); // you can pass some custom props to component from here\n\n      return {\n        custom: 'custom'\n      };\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default connect(function (state) {\n  return state;\n})(Index);","map":{"version":3,"sources":["C:\\Users\\rbhate\\projects\\react-next-serversiderendering\\pages\\index.js"],"names":["React","Component","connect","Index","props","foo","custom","store","isServer","pathname","query","dispatch","type","payload","state"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;IACMC,K;;;;;;;;;;;;;6BAOK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsB,gBAAe,KAAKC,KAAL,CAAWC,GAA1B,CAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAgC,KAAKD,KAAL,CAAWE,MAA3C,CAFF,CADF;AAMD;;;0CAb4D;AAAA,UAApCC,KAAoC,QAApCA,KAAoC;AAAA,UAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,UAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,UAATC,KAAS,QAATA,KAAS;AAC3D;AACAH,MAAAA,KAAK,CAACI,QAAN,CAAe;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAf,EAF2D,CAG3D;;AACA,aAAO;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAP;AACD;;;;EANiBL,S;;AAiBpB,eAAeC,OAAO,CAAC,UAACY,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0BX,KAA1B,CAAf","sourcesContent":["// This is the Link API\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\n//import Button from 'react-reusable-components/src/components/Button/Button';\r\nclass Index extends Component {\r\n  static getInitialProps({ store, isServer, pathname, query }) {\r\n    // component will be able to read from store's state when rendered\r\n    store.dispatch({ type: 'FOO', payload: 'foo' });\r\n    // you can pass some custom props to component from here\r\n    return { custom: 'custom' };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Prop from Redux {JSON.stringify(this.props.foo)}</div>\r\n        <div>Prop from getInitialProps {this.props.custom}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => state)(Index);\r\n"]},"metadata":{},"sourceType":"module"}