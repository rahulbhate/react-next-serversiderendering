{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rahulbhate/projects/react-next-serversiderendering/pages/sessions.js\";\n// This is the Link API\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport speakerReducer from '../src/reducers/speakerReducer';\nimport { useState, useEffect, useReducer } from 'react';\n\nfunction Sessions(_ref) {\n  var speaker = _ref.speaker;\n\n  var _useReducer = useReducer(speakerReducer, {\n    speaker: speaker\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      sessionData = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    console.log('UseEffect LifeCycle Method on Client Side get Called once Server Side Rendering Done');\n    dispatch({\n      type: 'setSessionsData',\n      data: sessionData\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, console.log(sessionData.speaker.sessions), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, sessionData.speaker.sessions.map(function (session, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, session.title);\n  })));\n}\n\nSessions.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var respon, jj;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:8000/sessions');\n\n        case 2:\n          respon = _context.sent;\n          _context.next = 5;\n          return respon.json();\n\n        case 5:\n          jj = _context.sent;\n          return _context.abrupt(\"return\", {\n            speaker: jj\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Sessions;","map":{"version":3,"sources":["/Users/rahulbhate/projects/react-next-serversiderendering/pages/sessions.js"],"names":["React","speakerReducer","useState","useEffect","useReducer","Sessions","speaker","sessionData","dispatch","console","log","type","data","sessions","map","session","index","title","getInitialProps","fetch","respon","json","jj"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;;AAEA,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,oBACGF,UAAU,CAACH,cAAD,EAAiB;AACzDK,IAAAA,OAAO,EAAPA;AADyD,GAAjB,CADb;AAAA;AAAA,MACtBC,WADsB;AAAA,MACTC,QADS;;AAI7BL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CACE,sFADF;AAGAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,IAAI,EAAEL;AAFC,KAAD,CAAR;AAID,GARQ,EAQN,EARM,CAAT;AAUA,SACE,0CACGE,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACD,OAAZ,CAAoBO,QAAhC,CADH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,CAACD,OAAZ,CAAoBO,QAApB,CAA6BC,GAA7B,CAAiC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACpD,WAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,OAAO,CAACE,KAAzB,CAAP;AACD,GAFA,CADH,CAHF,CADF;AAWD;;AAEDZ,QAAQ,CAACa,eAAT;AAAA;AAAA;AAAA;AAAA,yBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJC,KAAK,CAAC,gCAAD,CADD;;AAAA;AACnBC,UAAAA,MADmB;AAAA;AAAA,iBAGRA,MAAM,CAACC,IAAP,EAHQ;;AAAA;AAGnBC,UAAAA,EAHmB;AAAA,2CAKlB;AAAEhB,YAAAA,OAAO,EAAEgB;AAAX,WALkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAQA,eAAejB,QAAf","sourcesContent":["// This is the Link API\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport speakerReducer from '../src/reducers/speakerReducer';\nimport { useState, useEffect, useReducer } from 'react';\n\nfunction Sessions({ speaker }) {\n  const [sessionData, dispatch] = useReducer(speakerReducer, {\n    speaker,\n  });\n  useEffect(() => {\n    console.log(\n      'UseEffect LifeCycle Method on Client Side get Called once Server Side Rendering Done',\n    );\n    dispatch({\n      type: 'setSessionsData',\n      data: sessionData,\n    });\n  }, []);\n\n  return (\n    <>\n      {console.log(sessionData.speaker.sessions)}\n\n      <ul>\n        {sessionData.speaker.sessions.map((session, index) => {\n          return <li key={index}>{session.title}</li>;\n        })}\n      </ul>\n    </>\n  );\n}\n\nSessions.getInitialProps = async () => {\n  const respon = await fetch('http://localhost:8000/sessions');\n\n  const jj = await respon.json();\n\n  return { speaker: jj };\n};\n\nexport default Sessions;\n"]},"metadata":{},"sourceType":"module"}