{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rbhate\\\\projects\\\\react-next-serversiderendering\\\\pages\\\\secret.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport withAuth from '../utils/withAuth';\nimport { Router } from 'next/router';\nimport decode from 'jwt-decode';\nvar serverUrl = 'http://localhost:8080';\n\nfunction Secret() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clientToken = _useState4[0],\n      setToken = _useState4[1];\n  /*useEffect(() => {\r\n    const token = localStorage.getItem('rememberMe');\r\n    console.log(token);\r\n      if (token) {\r\n      const decoded = decode(token);\r\n      setAuthenticated(true);\r\n      setToken(token);\r\n      console.log(clientToken);\r\n      console.log(decoded);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        setAuthenticated(false);\r\n        localStorage.removeItem('rememberMe');\r\n      }\r\n    } else {\r\n      setAuthenticated(false);\r\n      //Router.push('/login');\r\n    }\r\n    console.log('useEffect hook called');\r\n  });\r\n  const logout = async () => {\r\n    await axios\r\n      .post(serverUrl + '/logout', {})\r\n      .then((res) => {\r\n        console.log(res);\r\n        setToken('');\r\n        localStorage.removeItem('rememberMe');\r\n        console.log('token has been removed');\r\n      })\r\n      .then((error) => {\r\n        console.log(error);\r\n      });\r\n  };*/\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"This is secret page\"));\n}\n\nexport default withAuth(Secret);","map":{"version":3,"sources":["C:\\Users\\rbhate\\projects\\react-next-serversiderendering\\pages\\secret.js"],"names":["React","useState","useEffect","axios","withAuth","Router","decode","serverUrl","Secret","isAuthenticated","setAuthenticated","clientToken","setToken"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,IAAMC,SAAS,GAAG,uBAAlB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBAC4BP,QAAQ,CAAC,IAAD,CADpC;AAAA;AAAA,MACTQ,eADS;AAAA,MACQC,gBADR;;AAAA,mBAEgBT,QAAQ,EAFxB;AAAA;AAAA,MAETU,WAFS;AAAA,MAEIC,QAFJ;AAGhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AACD,eAAeR,QAAQ,CAACI,MAAD,CAAvB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport withAuth from '../utils/withAuth';\r\nimport { Router } from 'next/router';\r\nimport decode from 'jwt-decode';\r\nconst serverUrl = 'http://localhost:8080';\r\n\r\nfunction Secret() {\r\n  const [isAuthenticated, setAuthenticated] = useState(true);\r\n  const [clientToken, setToken] = useState();\r\n  /*useEffect(() => {\r\n    const token = localStorage.getItem('rememberMe');\r\n    console.log(token);\r\n\r\n    if (token) {\r\n      const decoded = decode(token);\r\n      setAuthenticated(true);\r\n      setToken(token);\r\n      console.log(clientToken);\r\n      console.log(decoded);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        setAuthenticated(false);\r\n        localStorage.removeItem('rememberMe');\r\n      }\r\n    } else {\r\n      setAuthenticated(false);\r\n      //Router.push('/login');\r\n    }\r\n    console.log('useEffect hook called');\r\n  });\r\n  const logout = async () => {\r\n    await axios\r\n      .post(serverUrl + '/logout', {})\r\n      .then((res) => {\r\n        console.log(res);\r\n        setToken('');\r\n        localStorage.removeItem('rememberMe');\r\n        console.log('token has been removed');\r\n      })\r\n      .then((error) => {\r\n        console.log(error);\r\n      });\r\n  };*/\r\n  return (\r\n    <div>\r\n      <h3>This is secret page</h3>\r\n    </div>\r\n  );\r\n}\r\nexport default withAuth(Secret);\r\n"]},"metadata":{},"sourceType":"module"}